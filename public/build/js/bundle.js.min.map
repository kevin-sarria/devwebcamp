{"version":3,"sources":["horas.js","tags.js"],"names":["document","querySelector","busqueda","categoria_id","dia","categoria","dias","querySelectorAll","inputHiddenDia","inputHiddenHora","terminoBusqueda","e","target","name","value","horaPrevia","classList","remove","Object","values","includes","async","url","resultado","fetch","eventos","listadoHoras","forEach","li","add","horasTomadas","map","evento","hora_id","Array","from","filter","dataset","horaId","hora","addEventListener","seleccionarHora","obtenerHorasDisponibles","json","buscarEventos","tagsInput","tags","tagsDiv","tagsInputHidden","mostrarTags","textContent","tag","etiqueta","createElement","ondblclick","eliminartag","appendChild","actualizarInputHidden","toString","split","keyCode","preventDefault","trim"],"mappings":"CAAA,WAKA,GAFAA,SAAAC,cAAA,UAEA,CAEA,IAAAC,EAAA,CACAC,aAAA,GACAC,IAAA,IAGA,MAAAC,EAAAL,SAAAC,cAAA,yBACAK,EAAAN,SAAAO,iBAAA,gBACAC,EAAAR,SAAAC,cAAA,mBACAQ,EAAAT,SAAAC,cAAA,oBAKA,SAAAS,EAAAC,GAEAT,EAAAS,EAAAC,OAAAC,MAAAF,EAAAC,OAAAE,MAGAL,EAAAK,MAAA,GACAN,EAAAM,MAAA,GACA,MAAAC,EAAAf,SAAAC,cAAA,8BACAc,GACAA,EAAAC,UAAAC,OAAA,6BAIAC,OAAAC,OAAAjB,GAAAkB,SAAA,KAQAC,iBAEA,MAAAlB,aAAAA,EAAAC,IAAAA,GAAAF,EAEAoB,EAAA,oDAAAlB,kBAAAD,IAEAoB,QAAAC,MAAAF,IAMA,SAAAG,GAGA,MAAAC,EAAA1B,SAAAO,iBAAA,aACAmB,EAAAC,QAAAC,GAAAA,EAAAZ,UAAAa,IAAA,+BAIA,MAAAC,EAAAL,EAAAM,IAAAC,GAAAA,EAAAC,SAGAV,EAFAW,MAAAC,KAAAT,GAEAU,OAAAR,IAAAE,EAAAV,SAAAQ,EAAAS,QAAAC,SACAf,EAAAI,QAAAC,GAAAA,EAAAZ,UAAAC,OAAA,+BAEAM,EACAI,QAAAY,GAAAA,EAAAC,iBAAA,QAAAC,IAnBAC,OADAnB,EAAAoB,QAXAC,GAmCA,SAAAH,EAAA9B,GAGA,MAAAI,EAAAf,SAAAC,cAAA,8BACAc,GACAA,EAAAC,UAAAC,OAAA,6BAKAN,EAAAC,OAAAI,UAAAa,IAAA,6BAEApB,EAAAK,MAAAH,EAAAC,OAAAyB,QAAAC,OAGA9B,EAAAM,MAAAd,SAAAC,cAAA,wBAtEAI,EAAAmC,iBAAA,SAAA9B,GACAJ,EAAAqB,QAAAvB,GAAAA,EAAAoC,iBAAA,SAAA9B,KAlBA,GCAA,WAGA,MAAAmC,EAAA7C,SAAAC,cAAA,eAEA,GAAA4C,EAAA,CAEA,IAAAC,EAAA,GACA,MAAAC,EAAA/C,SAAAC,cAAA,SACA+C,EAAAhD,SAAAC,cAAA,iBA8BA,SAAAgD,IAEAF,EAAAG,YAAA,GAEAJ,EAAAnB,QAAAwB,IACA,MAAAC,EAAApD,SAAAqD,cAAA,MACAD,EAAApC,UAAAa,IAAA,mBACAuB,EAAAF,YAAAC,EACAC,EAAAE,WAAAC,EACAR,EAAAS,YAAAJ,KAGAK,IAIA,SAAAF,EAAA5C,GACAA,EAAAC,OAAAK,SAEA6B,EAAAA,EAAAV,OAAAe,GAAAA,IAAAxC,EAAAC,OAAAsC,aAEAO,IAIA,SAAAA,IACAT,EAAAlC,MAAAgC,EAAAY,WArDA,KAAAV,EAAAlC,QACAgC,EAAAE,EAAAlC,MAAA6C,MAAA,KACAV,KAIAJ,EAAAL,iBAAA,YAEA,SAAA7B,GAEA,GAAA,KAAAA,EAAAiD,SAAA,KAAAjD,EAAAiD,QAAA,CAIA,GAFAjD,EAAAkD,iBAEA,KAAAlD,EAAAC,OAAAE,MAAAgD,QAAAnD,EAAAC,OAAAE,MAAA,EACA,OAGAgC,EAAA,IAAAA,EAAAnC,EAAAC,OAAAE,MAAAgD,QACAjB,EAAA/B,MAAA,GAEAmC,SAjCA","file":"bundle.js","sourcesContent":["(function() {\r\n\r\n\r\n    const horas = document.querySelector('#horas');\r\n\r\n    if( horas ) {\r\n\r\n        let busqueda = {\r\n            categoria_id: '',\r\n            dia: ''\r\n        };\r\n\r\n        const categoria = document.querySelector('[name=\"categoria_id\"]');\r\n        const dias = document.querySelectorAll('[name=\"dia\"]');\r\n        const inputHiddenDia = document.querySelector('[name=\"dia_id\"]');\r\n        const inputHiddenHora = document.querySelector('[name=\"hora_id\"]');\r\n\r\n        categoria.addEventListener('change', terminoBusqueda);\r\n        dias.forEach( dia => dia.addEventListener('change',  terminoBusqueda ));\r\n\r\n        function terminoBusqueda(e) {\r\n\r\n            busqueda[e.target.name] = e.target.value;\r\n\r\n            // Reiniciar los campos ocultos y el selector de horas\r\n            inputHiddenHora.value = '';\r\n            inputHiddenDia.value = '';\r\n            const horaPrevia = document.querySelector('.horas__hora--seleccionada');\r\n            if( horaPrevia ) {\r\n                horaPrevia.classList.remove('horas__hora--seleccionada');\r\n            }\r\n\r\n    \r\n            if( Object.values(busqueda).includes('') ) {\r\n                return;\r\n            }\r\n\r\n            buscarEventos();\r\n\r\n        }\r\n\r\n        async function buscarEventos() {\r\n\r\n            const { categoria_id, dia } = busqueda;\r\n\r\n            const url = `http://localhost:3000/api/eventos-horario?dia_id=${dia}&categoria_id=${categoria_id}`;\r\n\r\n            const resultado = await fetch(url);\r\n            const eventos = await resultado.json();\r\n            obtenerHorasDisponibles(eventos);\r\n\r\n        }\r\n\r\n        function obtenerHorasDisponibles(eventos) {\r\n\r\n            // Reiniciar las horas\r\n            const listadoHoras = document.querySelectorAll('#horas li');\r\n            listadoHoras.forEach( li => li.classList.add('horas__hora--deshabilitada') );\r\n\r\n            // Comprobar eventos ya tomados y quitar la variable de deshabilitado\r\n\r\n            const horasTomadas = eventos.map( evento => evento.hora_id );\r\n            const listadoHorasArray = Array.from(listadoHoras);\r\n            \r\n            const resultado = listadoHorasArray.filter( li => !horasTomadas.includes(li.dataset.horaId) );\r\n            resultado.forEach( li => li.classList.remove('horas__hora--deshabilitada') );\r\n\r\n            const horasDisponibles = resultado;\r\n            horasDisponibles.forEach( hora => hora.addEventListener('click', seleccionarHora) );\r\n            \r\n        }\r\n\r\n        function seleccionarHora(e) {\r\n\r\n            // Deshabilitar la hora previa, si hay un nuevo click\r\n            const horaPrevia = document.querySelector('.horas__hora--seleccionada');\r\n            if( horaPrevia ) {\r\n                horaPrevia.classList.remove('horas__hora--seleccionada');\r\n            }\r\n\r\n\r\n            // Agregar Clase de Seleccionado\r\n            e.target.classList.add('horas__hora--seleccionada');\r\n\r\n            inputHiddenHora.value = e.target.dataset.horaId;\r\n            \r\n            // Llenar el campo oculto de d√≠a\r\n            inputHiddenDia.value = document.querySelector('[name=\"dia\"]:checked');\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n})();","(\r\n    function() {\r\n        \r\n        const tagsInput = document.querySelector('#tags_input');\r\n\r\n        if( tagsInput ) {\r\n            \r\n            let tags = [];\r\n            const tagsDiv = document.querySelector('#tags');\r\n            const tagsInputHidden = document.querySelector('[name=\"tags\"]');\r\n\r\n            // Recuperar del input oculto\r\n            if( tagsInputHidden.value !== '' ) {\r\n                tags = tagsInputHidden.value.split(',');\r\n                mostrarTags();\r\n            }\r\n\r\n            // Escuchar los cambios en el Input\r\n            tagsInput.addEventListener('keypress', guardarTag);\r\n\r\n            function guardarTag(e) {\r\n                \r\n                if( e.keyCode === 44 || e.keyCode === 13 ) {\r\n\r\n                    e.preventDefault();\r\n\r\n                    if( e.target.value.trim() === '' || e.target.value < 1 ) {\r\n                        return;\r\n                    }\r\n\r\n                    tags = [ ...tags, e.target.value.trim() ];\r\n                    tagsInput.value = '';\r\n                    \r\n                    mostrarTags();\r\n\r\n                }\r\n            }\r\n\r\n\r\n            function mostrarTags() {\r\n\r\n                tagsDiv.textContent = '';\r\n\r\n                tags.forEach( tag => {\r\n                    const etiqueta = document.createElement('LI');\r\n                    etiqueta.classList.add('formulario__tag');\r\n                    etiqueta.textContent = tag;\r\n                    etiqueta.ondblclick = eliminartag;\r\n                    tagsDiv.appendChild(etiqueta);\r\n                } );\r\n\r\n                actualizarInputHidden();\r\n\r\n            }\r\n\r\n            function eliminartag(e) {\r\n                e.target.remove();\r\n                \r\n                tags = tags.filter( tag => tag !== e.target.textContent );\r\n\r\n                actualizarInputHidden();\r\n\r\n            }\r\n\r\n            function actualizarInputHidden() {\r\n                tagsInputHidden.value = tags.toString();\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n)();"]}