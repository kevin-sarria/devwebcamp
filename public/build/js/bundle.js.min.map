{"version":3,"sources":["horas.js","ponentes.js","tags.js"],"names":["document","querySelector","busqueda","categoria_id","dia","categoria","dias","querySelectorAll","inputHiddenDia","inputHiddenHora","terminoBusqueda","e","target","name","value","horaPrevia","classList","remove","Object","values","includes","async","url","resultado","fetch","eventos","listadoHoras","forEach","li","add","horasTomadas","map","evento","hora_id","listadoHorasArray","Array","from","filter","dataset","horaId","hora","addEventListener","seleccionarHora","obtenerHorasDisponibles","json","buscarEventos","contains","ponentesInput","ponentes","ponentesFiltrados","listadoPonentes","ponenteHidden","seleccionarPonente","ponente","ponentePrevio","ponenteId","respuesta","arrayPonentes","nombre","trim","apellido","id","obtenerPonenetes","length","expresion","RegExp","toLowerCase","search","firstChild","removeChild","ponenteHTML","createElement","textContent","onclick","appendChild","noResultados","mostrarPonentes","tagsInput","tags","tagsDiv","tagsInputHidden","mostrarTags","tag","etiqueta","ondblclick","eliminartag","actualizarInputHidden","toString","split","keyCode","preventDefault"],"mappings":"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","file":"bundle.js","sourcesContent":["(function() {\r\n\r\n\r\n    const horas = document.querySelector('#horas');\r\n\r\n    if( horas ) {\r\n\r\n        let busqueda = {\r\n            categoria_id: '',\r\n            dia: ''\r\n        };\r\n\r\n        const categoria = document.querySelector('[name=\"categoria_id\"]');\r\n        const dias = document.querySelectorAll('[name=\"dia\"]');\r\n        const inputHiddenDia = document.querySelector('[name=\"dia_id\"]');\r\n        const inputHiddenHora = document.querySelector('[name=\"hora_id\"]');\r\n\r\n        categoria.addEventListener('change', terminoBusqueda);\r\n        dias.forEach( dia => dia.addEventListener('change',  terminoBusqueda ));\r\n\r\n        function terminoBusqueda(e) {\r\n\r\n            busqueda[e.target.name] = e.target.value;\r\n\r\n            // Reiniciar los campos ocultos y el selector de horas\r\n            inputHiddenHora.value = '';\r\n            inputHiddenDia.value = '';\r\n            const horaPrevia = document.querySelector('.horas__hora--seleccionada');\r\n            if( horaPrevia ) {\r\n                horaPrevia.classList.remove('horas__hora--seleccionada');\r\n            }\r\n\r\n    \r\n            if( Object.values(busqueda).includes('') ) {\r\n                return;\r\n            }\r\n\r\n            buscarEventos();\r\n\r\n        }\r\n\r\n        async function buscarEventos() {\r\n\r\n            const { categoria_id, dia } = busqueda;\r\n\r\n            const url = `http://localhost:3000/api/eventos-horario?dia_id=${dia}&categoria_id=${categoria_id}`;\r\n\r\n            const resultado = await fetch(url);\r\n            const eventos = await resultado.json();\r\n            obtenerHorasDisponibles(eventos);\r\n\r\n        }\r\n\r\n        function obtenerHorasDisponibles(eventos) {\r\n\r\n            // Reiniciar las horas\r\n            const listadoHoras = document.querySelectorAll('#horas li');\r\n            listadoHoras.forEach( li => li.classList.add('horas__hora--deshabilitada') );\r\n\r\n            // Comprobar eventos ya tomados y quitar la variable de deshabilitado\r\n\r\n            const horasTomadas = eventos.map( evento => evento.hora_id );\r\n            const listadoHorasArray = Array.from(listadoHoras);\r\n            \r\n            const resultado = listadoHorasArray.filter( li => !horasTomadas.includes(li.dataset.horaId) );\r\n            resultado.forEach( li => li.classList.remove('horas__hora--deshabilitada') );\r\n\r\n            const horasDisponibles = document.querySelectorAll('#horas li:not(.horas__hora--deshabilitada)');\r\n            horasDisponibles.forEach( hora => hora.addEventListener('click', seleccionarHora) );\r\n            \r\n        }\r\n\r\n        function seleccionarHora(e) {\r\n\r\n            if(e.target.classList.contains('horas__hora--deshabilitada')){\r\n                return;\r\n           }\r\n            // Deshabilitar la hora previa, si hay un nuevo click\r\n            const horaPrevia = document.querySelector('.horas__hora--seleccionada');\r\n            if( horaPrevia ) {\r\n                horaPrevia.classList.remove('horas__hora--seleccionada');\r\n            }\r\n\r\n\r\n            // Agregar Clase de Seleccionado\r\n            e.target.classList.add('horas__hora--seleccionada');\r\n\r\n            inputHiddenHora.value = e.target.dataset.horaId;\r\n            \r\n            // Llenar el campo oculto de dÃ­a\r\n            inputHiddenDia.value = document.querySelector('[name=\"dia\"]:checked').value;\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n})();","(function() {\r\n\r\n    const ponentesInput = document.querySelector('#ponentes');\r\n\r\n    if( ponentesInput ) {\r\n\r\n        let ponentes = [];\r\n        let ponentesFiltrados = [];\r\n\r\n        const listadoPonentes = document.querySelector('#listado-ponentes');\r\n        const ponenteHidden = document.querySelector('[name=\"ponente_id\"]');\r\n\r\n        obtenerPonenetes();\r\n\r\n        ponentesInput.addEventListener('input', buscarPonentes);\r\n\r\n        async function obtenerPonenetes() {\r\n\r\n            const url = `http://localhost:3000/api/ponentes`;\r\n\r\n            const respuesta = await fetch(url);\r\n            const resultado = await respuesta.json();\r\n            \r\n            formatearPonentes(resultado);\r\n\r\n        }\r\n\r\n        function formatearPonentes(arrayPonentes) {\r\n\r\n            ponentes = arrayPonentes.map( ponente => {\r\n                return {\r\n                    nombre: `${ponente.nombre.trim()} ${ponente.apellido.trim()}`,\r\n                    id: ponente.id\r\n                }\r\n            } );\r\n\r\n        }\r\n\r\n        function buscarPonentes(e) {\r\n\r\n            const busqueda = e.target.value;\r\n\r\n            if( busqueda.length > 3 ) {\r\n\r\n                const expresion = new RegExp( busqueda, \"i\" );\r\n                ponentesFiltrados = ponentes.filter( ponente => {\r\n                    if( ponente.nombre.toLowerCase().search(expresion) != -1 ) {\r\n                        return ponente;\r\n                    }\r\n                });\r\n            }else {\r\n                ponentesFiltrados = [];\r\n            }\r\n\r\n            mostrarPonentes() \r\n\r\n        }\r\n\r\n        function mostrarPonentes() {\r\n\r\n            while( listadoPonentes.firstChild ) {\r\n                listadoPonentes.removeChild(listadoPonentes.firstChild);\r\n            }\r\n\r\n\r\n            if( ponentesFiltrados.length > 0 ) {\r\n                ponentesFiltrados.forEach( ponente => {\r\n\r\n                    const { id, nombre } = ponente;\r\n    \r\n                    const ponenteHTML = document.createElement('LI');\r\n                    ponenteHTML.classList.add('listado-ponentes__ponente');\r\n                    ponenteHTML.textContent = nombre;\r\n                    ponenteHTML.dataset.ponenteId = id;\r\n                    ponenteHTML.onclick = seleccionarPonente;\r\n    \r\n                    // AÃ±adir al DOM\r\n                    listadoPonentes.appendChild(ponenteHTML);\r\n    \r\n                } );\r\n            } else {\r\n                const noResultados = document.createElement('P');\r\n                noResultados.classList.add('listado-ponentes__no-resultado');\r\n                noResultados.textContent = 'No hay resultados para tu bÃºsqueda';\r\n                listadoPonentes.appendChild(noResultados);\r\n            }\r\n        }\r\n\r\n        function seleccionarPonente(e) {\r\n\r\n            const ponente = e.target;\r\n\r\n            // Remover la clase previa\r\n            const ponentePrevio = document.querySelector('.listado-ponentes__ponente--seleccionado');\r\n\r\n            if( ponentePrevio ) {\r\n                ponentePrevio.classList.remove('listado-ponentes__ponente--seleccionado');\r\n            }\r\n\r\n            ponente.classList.add('listado-ponentes__ponente--seleccionado');\r\n\r\n            ponenteHidden.value = ponente.dataset.ponenteId;\r\n\r\n        }\r\n\r\n    }\r\n\r\n})();","(\r\n    function() {\r\n        \r\n        const tagsInput = document.querySelector('#tags_input');\r\n\r\n        if( tagsInput ) {\r\n            \r\n            let tags = [];\r\n            const tagsDiv = document.querySelector('#tags');\r\n            const tagsInputHidden = document.querySelector('[name=\"tags\"]');\r\n\r\n            // Recuperar del input oculto\r\n            if( tagsInputHidden.value !== '' ) {\r\n                tags = tagsInputHidden.value.split(',');\r\n                mostrarTags();\r\n            }\r\n\r\n            // Escuchar los cambios en el Input\r\n            tagsInput.addEventListener('keypress', guardarTag);\r\n\r\n            function guardarTag(e) {\r\n                \r\n                if( e.keyCode === 44 || e.keyCode === 13 ) {\r\n\r\n                    e.preventDefault();\r\n\r\n                    if( e.target.value.trim() === '' || e.target.value < 1 ) {\r\n                        return;\r\n                    }\r\n\r\n                    tags = [ ...tags, e.target.value.trim() ];\r\n                    tagsInput.value = '';\r\n                    \r\n                    mostrarTags();\r\n\r\n                }\r\n            }\r\n\r\n\r\n            function mostrarTags() {\r\n\r\n                tagsDiv.textContent = '';\r\n\r\n                tags.forEach( tag => {\r\n                    const etiqueta = document.createElement('LI');\r\n                    etiqueta.classList.add('formulario__tag');\r\n                    etiqueta.textContent = tag;\r\n                    etiqueta.ondblclick = eliminartag;\r\n                    tagsDiv.appendChild(etiqueta);\r\n                } );\r\n\r\n                actualizarInputHidden();\r\n\r\n            }\r\n\r\n            function eliminartag(e) {\r\n                e.target.remove();\r\n                \r\n                tags = tags.filter( tag => tag !== e.target.textContent );\r\n\r\n                actualizarInputHidden();\r\n\r\n            }\r\n\r\n            function actualizarInputHidden() {\r\n                tagsInputHidden.value = tags.toString();\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n)();"]}